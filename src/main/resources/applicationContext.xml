<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
   http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
1、开启注解扫描
2、配置数据源
3、MyBatis配置
4、事务管理配置
5、事务切面配置
    -->

    <!--1、开启注解扫描 扫描dao层和service层-->
    <context:component-scan base-package="com.gx.dao,com.gx.service"></context:component-scan>

    <!--加载jdbc.properties-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--2、配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--数据库驱动类名-->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <!--数据库连接字符串 如果直接写在xml中，&符号需要使用&amp;来转义
        jdbc:mysql://localhost:3306/base_admin?characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai&amp;useSSL=false
        -->
        <property name="url" value="${jdbc.url}"/>
        <!--数据库用户名和密码  ${username} 获得到的是系统的用户名-->
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--3、MyBatis配置-->
    <!--sqlSessionFactory   mybatis-spring-2.x.x.jar-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定MyBatis配置文件-->
        <property name="configLocation" value="classpath:mybatis-conf.xml"/>
        <!--数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置Mapper.xml的路径-->
        <property name="mapperLocations" value="classpath:mappers/*.xml"/>
    </bean>

    <!--指定 dao接口所在的包，Spring会自动查找类-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定sqlSessionFactory bean的id-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--指定dao接口的包名-->
        <property name="basePackage" value="com.gx.dao"/>
    </bean>

    <!--4、事务管理配置-->
    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--事务管理器管理的数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置事务通知属性-->
    <!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--        <tx:attributes>-->
    <!--            &lt;!&ndash;propagation：事务传播属性 指定当前方法必需在事务环境中运行，如果当前有事务环境就加入当前正在执行的事务环境，如果当前没有事务，就新建一个事务。这是默认值。&ndash;&gt;-->
    <!--            <tx:method name="insert*" propagation="REQUIRED"/>-->
    <!--            <tx:method name="update*" propagation="REQUIRED"/>-->
    <!--            <tx:method name="delete*" propagation="REQUIRED"/>-->
    <!--            <tx:method name="authorize*" propagation="REQUIRED"/>&lt;!&ndash;授权方法&ndash;&gt;-->
    <!--            <tx:method name="save*" propagation="REQUIRED"/>&lt;!&ndash;用户导入批量保存用户方法&ndash;&gt;-->
    <!--            <tx:method name="select*" propagation="REQUIRED" read-only="true"/>-->
    <!--            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>-->
    <!--            <tx:method name="search*" propagation="REQUIRED" read-only="true"/>-->
    <!--            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>-->
    <!--            <tx:method name="load*" propagation="REQUIRED" read-only="true"/>-->
    <!--            <tx:method name="*" propagation="REQUIRED" read-only="true"/>-->
    <!--        </tx:attributes>-->
    <!--    </tx:advice>-->

    <!--    &lt;!&ndash;配置事务AOP&ndash;&gt;-->
    <!--    <aop:config>-->
    <!--        &lt;!&ndash;配置切入点&ndash;&gt;-->
    <!--        <aop:pointcut id="myPointcut" expression="(execution(* com.gx.service..*Impl.*(..)))"/>-->
    <!--        <aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut" order="2"/>-->
    <!--    </aop:config>-->

    <!--事务注解的驱动-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>